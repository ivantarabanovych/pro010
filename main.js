function doTask(message, callback){
    console.log(`Starting task: ${message}`);

    setTimeout (() => {
        console.log(`Task completed: ${message}`);
        callback();
    }, 2000);
}

function allTasksCompleted(){
    console.log('All tasks done!');
}

doTask('Loading data', () => {
    doTask('Processing data', () => {
        doTask('Saving data', allTasksCompleted);
    });
});

const explanation = `
Колбеки (callback functions) в JavaScript - це функції, які передаються як аргументи до інших функцій і викликаються після завершення певної операції. Колбеки дозволяють виконувати код асинхронно, тобто не блокуючи виконання інших частин коду, що особливо корисно для операцій, які можуть зайняти багато часу, наприклад, робота з мережею або файловою системою.

Основний принцип роботи з колбеками:

1. Передача функції як аргумент: Ви передаєте функцію як аргумент до іншої функції.
2. Виклик колбек-функції: Функція, яка приймає колбек як аргумент, викликає цю колбек-функцію в певний момент (наприклад, після завершення асинхронної операції).

Чому вони корисні для асинхронного програмування:

Асинхронне програмування дозволяє JavaScript виконувати інші завдання, поки очікується завершення асинхронних операцій (наприклад, запити до серверу, таймери або читання файлів). Колбеки допомагають визначити, що робити після завершення цих операцій.

Реальний приклад використання колбеків:

function doTask(message, callback) {
    console.log(\`Starting task: \${message}\`);
    
    setTimeout(() => {
        console.log(\`Task completed: \${message}\`);
        callback();
    }, 2000);
}

function allTasksCompleted() {
    console.log('All tasks are done!');
}

// Виконання завдання з колбеком
doTask('Loading data', () => {
    doTask('Processing data', () => {
        doTask('Saving data', allTasksCompleted);
    });
});

Чому колбеки важливі:

- Не блокують виконання коду: Коли ви виконуєте асинхронні операції (наприклад, HTTP-запити), основний потік коду не зупиняється в очікуванні завершення операції. Це дозволяє виконувати інші завдання в той час, як операція виконується у фоновому режимі.

- Гнучкість: Колбеки дозволяють динамічно визначати, що робити після завершення операції, замість жорстко закодованих дій.

Колбеки є основним механізмом для асинхронного програмування в JavaScript і використовуються у багатьох API, таких як таймери (setTimeout, setInterval), події DOM та багато інших.
`;

console.log(explanation);